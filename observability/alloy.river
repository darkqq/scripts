//logs flow
// otelcol.receiver.otlp default ->
// otelcol.processor.batch.logs.input ->
// otelcol.exporter.loki.default.input ->
// loki.process.logfmt.receiver ->
// loki.write.default.receiver

otelcol.receiver.otlp "default" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }
  http {
    endpoint = "0.0.0.0:4318"
  }
  output {
    logs    = [otelcol.exporter.loki.default.input]
    traces  = [otelcol.exporter.otlp.jaeger.input]
    metrics = [otelcol.processor.batch.metrics.input]
  }
}



loki.process "logfmt" {

  stage.json {
    expressions = {
      msg = "body",
      trace_id = "traceid",
      span_id = "spanid",
    }
  }

  stage.labels {
    values = {
      trace_id = "trace_id",
      span_id  = "span_id",
    }
  }

  stage.template {
    source = "formatted_log"
    template = "{{ .msg }}"
  }

  stage.output {
    source = "formatted_log"
  }

  forward_to = [loki.write.default.receiver]

}


otelcol.processor.batch "metrics" {
  output {
    metrics = [otelcol.exporter.prometheus.default.input]
  }
}

otelcol.exporter.loki "default" {
  forward_to = [loki.process.logfmt.receiver]
}

loki.write "default" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

otelcol.exporter.otlp "jaeger" {
  client {
    endpoint = "jaeger:4317"
    tls {
      insecure = true
    }
  }
}

prometheus.remote_write "default" {
  endpoint {
    url = "http://prometheus:9090/api/v1/write"
  }
}

otelcol.exporter.prometheus "default" {
  forward_to = [prometheus.remote_write.default.receiver]
}